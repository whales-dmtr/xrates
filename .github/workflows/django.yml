name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    services:
      app:
        image: whalesdmtr/xrates-app
        environment:
          DB_HOST: db
          REDIS_HOST: cache
          REDIS_LOCATION: redis://cache:6379/0
        depends_on:
          db:
            condition: service_healthy
          cache:
            condition: service_started
        networks:
          - backend
        volumes:
          - static_volume:/app/xrates/staticfiles
      db:
        image: postgres:14.18-alpine3.21
        environment:
          POSTGRES_DB: xrates
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        volumes:
          - db-data:/var/lib/postgresql/data
        networks:
          - backend
        healthcheck:
          test: [ "CMD-SHELL", "pg_isready -U postgres -d xrates" ]
          interval: 10s
          timeout: 3s
          retries: 3
      cache:
        image: redis:8.0.3-alpine3.21
        volumes:
          - cache-data:/data
        networks:
          - backend
      nginx:
        image: nginx:1.25
        ports:
          - "8080:8080"
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
          - static_volume:/app/xrates/staticfiles
        depends_on:
          - app
        networks:
          - backend

    volumes:
      db-data:
      cache-data:
      static_volume:


    networks:
      backend:


    runs-on: ubuntu-latest

    steps:
    - name: Check runner architecture
      run: uname -m

    - uses: actions/checkout@v4

    # - name: Run Docker Compose 
    #   run: docker compose up -d

    # - name: Run tests
    #   run: docker exec -i xrates-app sh -c "cd /app/xrates && ./manage.py test"
      
    - name: Run tests
      run: pwd 